// Targeted by JavaCPP version 1.5.7-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.treesitter;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.treesitter.global.treesitter.*;


@Properties(inherit = org.bytedeco.treesitter.presets.treesitter.class)
public class TSParseAction extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public TSParseAction() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TSParseAction(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TSParseAction(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public TSParseAction position(long position) {
        return (TSParseAction)super.position(position);
    }
    @Override public TSParseAction getPointer(long i) {
        return new TSParseAction((Pointer)this).offsetAddress(i);
    }

    @Name("shift.type") public native @Cast("uint8_t") byte shift_type(); public native TSParseAction shift_type(byte setter);
    @Name("shift.state") public native @Cast("TSStateId") short shift_state(); public native TSParseAction shift_state(short setter);
    @Name("shift.extra") public native @Cast("bool") boolean shift_extra(); public native TSParseAction shift_extra(boolean setter);
    @Name("shift.repetition") public native @Cast("bool") boolean shift_repetition(); public native TSParseAction shift_repetition(boolean setter);
    @Name("reduce.type") public native @Cast("uint8_t") byte reduce_type(); public native TSParseAction reduce_type(byte setter);
    @Name("reduce.child_count") public native @Cast("uint8_t") byte reduce_child_count(); public native TSParseAction reduce_child_count(byte setter);
    @Name("reduce.symbol") public native @Cast("uint16_t") short reduce_symbol(); public native TSParseAction reduce_symbol(short setter);
    @Name("reduce.dynamic_precedence") public native short reduce_dynamic_precedence(); public native TSParseAction reduce_dynamic_precedence(short setter);
    @Name("reduce.production_id") public native @Cast("uint16_t") short reduce_production_id(); public native TSParseAction reduce_production_id(short setter);
  public native @Cast("uint8_t") byte type(); public native TSParseAction type(byte setter);
}
